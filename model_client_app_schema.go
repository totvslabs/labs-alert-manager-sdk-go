/*
alertmanager

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ClientAppSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientAppSchema{}

// ClientAppSchema struct for ClientAppSchema
type ClientAppSchema struct {
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	Name *string `json:"name,omitempty"`
	Deleted *bool `json:"deleted,omitempty"`
	Contract *string `json:"contract,omitempty"`
	Labels map[string]interface{} `json:"labels,omitempty"`
	Id string `json:"id"`
	Token *string `json:"token,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	Url *string `json:"url,omitempty"`
	BillingId *string `json:"billing_id,omitempty"`
}

// NewClientAppSchema instantiates a new ClientAppSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientAppSchema(id string) *ClientAppSchema {
	this := ClientAppSchema{}
	this.Id = id
	return &this
}

// NewClientAppSchemaWithDefaults instantiates a new ClientAppSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAppSchemaWithDefaults() *ClientAppSchema {
	this := ClientAppSchema{}
	return &this
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ClientAppSchema) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ClientAppSchema) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *ClientAppSchema) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClientAppSchema) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClientAppSchema) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClientAppSchema) SetName(v string) {
	o.Name = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *ClientAppSchema) GetDeleted() bool {
	if o == nil || IsNil(o.Deleted) {
		var ret bool
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deleted) {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *ClientAppSchema) HasDeleted() bool {
	if o != nil && !IsNil(o.Deleted) {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given bool and assigns it to the Deleted field.
func (o *ClientAppSchema) SetDeleted(v bool) {
	o.Deleted = &v
}

// GetContract returns the Contract field value if set, zero value otherwise.
func (o *ClientAppSchema) GetContract() string {
	if o == nil || IsNil(o.Contract) {
		var ret string
		return ret
	}
	return *o.Contract
}

// GetContractOk returns a tuple with the Contract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetContractOk() (*string, bool) {
	if o == nil || IsNil(o.Contract) {
		return nil, false
	}
	return o.Contract, true
}

// HasContract returns a boolean if a field has been set.
func (o *ClientAppSchema) HasContract() bool {
	if o != nil && !IsNil(o.Contract) {
		return true
	}

	return false
}

// SetContract gets a reference to the given string and assigns it to the Contract field.
func (o *ClientAppSchema) SetContract(v string) {
	o.Contract = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClientAppSchema) GetLabels() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClientAppSchema) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]interface{}{}, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ClientAppSchema) HasLabels() bool {
	if o != nil && IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *ClientAppSchema) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

// GetId returns the Id field value
func (o *ClientAppSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ClientAppSchema) SetId(v string) {
	o.Id = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ClientAppSchema) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ClientAppSchema) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ClientAppSchema) SetToken(v string) {
	o.Token = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ClientAppSchema) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ClientAppSchema) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ClientAppSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ClientAppSchema) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ClientAppSchema) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ClientAppSchema) SetUrl(v string) {
	o.Url = &v
}

// GetBillingId returns the BillingId field value if set, zero value otherwise.
func (o *ClientAppSchema) GetBillingId() string {
	if o == nil || IsNil(o.BillingId) {
		var ret string
		return ret
	}
	return *o.BillingId
}

// GetBillingIdOk returns a tuple with the BillingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientAppSchema) GetBillingIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingId) {
		return nil, false
	}
	return o.BillingId, true
}

// HasBillingId returns a boolean if a field has been set.
func (o *ClientAppSchema) HasBillingId() bool {
	if o != nil && !IsNil(o.BillingId) {
		return true
	}

	return false
}

// SetBillingId gets a reference to the given string and assigns it to the BillingId field.
func (o *ClientAppSchema) SetBillingId(v string) {
	o.BillingId = &v
}

func (o ClientAppSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientAppSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Deleted) {
		toSerialize["deleted"] = o.Deleted
	}
	if !IsNil(o.Contract) {
		toSerialize["contract"] = o.Contract
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.BillingId) {
		toSerialize["billing_id"] = o.BillingId
	}
	return toSerialize, nil
}

type NullableClientAppSchema struct {
	value *ClientAppSchema
	isSet bool
}

func (v NullableClientAppSchema) Get() *ClientAppSchema {
	return v.value
}

func (v *NullableClientAppSchema) Set(val *ClientAppSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableClientAppSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableClientAppSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientAppSchema(val *ClientAppSchema) *NullableClientAppSchema {
	return &NullableClientAppSchema{value: val, isSet: true}
}

func (v NullableClientAppSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientAppSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


