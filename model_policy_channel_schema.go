/*
alertmanager

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package labs_alert_manager_client

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the PolicyChannelSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyChannelSchema{}

// PolicyChannelSchema struct for PolicyChannelSchema
type PolicyChannelSchema struct {
	// Client uuid. This is the id defined by client app
	ClientUuid string `json:"client_uuid"`
	// Policy Channel config
	Config map[string]interface{} `json:"config"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Policy Channel deleted flag
	Deleted bool `json:"deleted"`
	// Policy Channel enabled flag
	Enabled bool `json:"enabled"`
	// Id
	Id string `json:"id"`
	LastNotification NullableTime `json:"last_notification,omitempty"`
	// Policy Channel name
	Name string `json:"name"`
	// Policy Channel type
	Type string `json:"type"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

type _PolicyChannelSchema PolicyChannelSchema

// NewPolicyChannelSchema instantiates a new PolicyChannelSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyChannelSchema(clientUuid string, config map[string]interface{}, deleted bool, enabled bool, id string, name string, type_ string) *PolicyChannelSchema {
	this := PolicyChannelSchema{}
	this.ClientUuid = clientUuid
	this.Config = config
	this.Deleted = deleted
	this.Enabled = enabled
	this.Id = id
	this.Name = name
	this.Type = type_
	return &this
}

// NewPolicyChannelSchemaWithDefaults instantiates a new PolicyChannelSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyChannelSchemaWithDefaults() *PolicyChannelSchema {
	this := PolicyChannelSchema{}
	return &this
}

// GetClientUuid returns the ClientUuid field value
func (o *PolicyChannelSchema) GetClientUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientUuid
}

// GetClientUuidOk returns a tuple with the ClientUuid field value
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetClientUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientUuid, true
}

// SetClientUuid sets field value
func (o *PolicyChannelSchema) SetClientUuid(v string) {
	o.ClientUuid = v
}

// GetConfig returns the Config field value
func (o *PolicyChannelSchema) GetConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// SetConfig sets field value
func (o *PolicyChannelSchema) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PolicyChannelSchema) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PolicyChannelSchema) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PolicyChannelSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeleted returns the Deleted field value
func (o *PolicyChannelSchema) GetDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Deleted, true
}

// SetDeleted sets field value
func (o *PolicyChannelSchema) SetDeleted(v bool) {
	o.Deleted = v
}

// GetEnabled returns the Enabled field value
func (o *PolicyChannelSchema) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *PolicyChannelSchema) SetEnabled(v bool) {
	o.Enabled = v
}

// GetId returns the Id field value
func (o *PolicyChannelSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PolicyChannelSchema) SetId(v string) {
	o.Id = v
}

// GetLastNotification returns the LastNotification field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PolicyChannelSchema) GetLastNotification() time.Time {
	if o == nil || IsNil(o.LastNotification.Get()) {
		var ret time.Time
		return ret
	}
	return *o.LastNotification.Get()
}

// GetLastNotificationOk returns a tuple with the LastNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PolicyChannelSchema) GetLastNotificationOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastNotification.Get(), o.LastNotification.IsSet()
}

// HasLastNotification returns a boolean if a field has been set.
func (o *PolicyChannelSchema) HasLastNotification() bool {
	if o != nil && o.LastNotification.IsSet() {
		return true
	}

	return false
}

// SetLastNotification gets a reference to the given NullableTime and assigns it to the LastNotification field.
func (o *PolicyChannelSchema) SetLastNotification(v time.Time) {
	o.LastNotification.Set(&v)
}
// SetLastNotificationNil sets the value for LastNotification to be an explicit nil
func (o *PolicyChannelSchema) SetLastNotificationNil() {
	o.LastNotification.Set(nil)
}

// UnsetLastNotification ensures that no value is present for LastNotification, not even an explicit nil
func (o *PolicyChannelSchema) UnsetLastNotification() {
	o.LastNotification.Unset()
}

// GetName returns the Name field value
func (o *PolicyChannelSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PolicyChannelSchema) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *PolicyChannelSchema) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *PolicyChannelSchema) SetType(v string) {
	o.Type = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *PolicyChannelSchema) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyChannelSchema) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *PolicyChannelSchema) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *PolicyChannelSchema) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o PolicyChannelSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyChannelSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["client_uuid"] = o.ClientUuid
	toSerialize["config"] = o.Config
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	toSerialize["deleted"] = o.Deleted
	toSerialize["enabled"] = o.Enabled
	toSerialize["id"] = o.Id
	if o.LastNotification.IsSet() {
		toSerialize["last_notification"] = o.LastNotification.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *PolicyChannelSchema) UnmarshalJSON(bytes []byte) (err error) {
    // This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"client_uuid",
		"config",
		"deleted",
		"enabled",
		"id",
		"name",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicyChannelSchema := _PolicyChannelSchema{}

	err = json.Unmarshal(bytes, &varPolicyChannelSchema)

	if err != nil {
		return err
	}

	*o = PolicyChannelSchema(varPolicyChannelSchema)

	return err
}

type NullablePolicyChannelSchema struct {
	value *PolicyChannelSchema
	isSet bool
}

func (v NullablePolicyChannelSchema) Get() *PolicyChannelSchema {
	return v.value
}

func (v *NullablePolicyChannelSchema) Set(val *PolicyChannelSchema) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyChannelSchema) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyChannelSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyChannelSchema(val *PolicyChannelSchema) *NullablePolicyChannelSchema {
	return &NullablePolicyChannelSchema{value: val, isSet: true}
}

func (v NullablePolicyChannelSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyChannelSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


